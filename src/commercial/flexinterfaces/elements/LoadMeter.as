package {	import flash.display.Sprite;	import flash.events.*;	mx.controls.ProgressBar;	mx.controls.ProgressBarMode;	import flash.system.ApplicationDomain;	import zephyr.BroadcastEvent;//	import flash.display.StageAlign;//	import flash.display.StageScaleMode;		public class LoadMeter extends ProgressBar {		private var ModuleLoader:Class;		private var moduleLoader:Object;		private var percentages:Object = new Object();		public function LoadMeter() 		{			super();						addEventListener(Event.ADDED_TO_STAGE, stageReady, false, 0, true );		}				private function stageReady(e:Event):void {			//stage.align = StageAlign.TOP_LEFT;			//stage.scaleMode = StageScaleMode.NO_SCALE;			ModuleLoader = ApplicationDomain.currentDomain.getDefinition("ModuleLoader") as Class;			moduleLoader = ModuleLoader( parent );			moduleLoader.addEventListener(BroadcastEvent.LOAD_PROGRESS, onProgress, false, 0, true);						settings = moduleLoader.xmlByName["LoadMeter"] as XML;						this.mode = ProgressBarMode.MANUAL;		}		private function onProgress(e:BroadcastEvent):void {			//can't seem to get ratioloaded? trace(e.ratioLoaded);						percentages[e.info.id] = e.info.percentLoaded;			var bytesTotal:Number = 0;			var overItems:int = 0;			for (var id:String in percentages) {				bytesTotal += Number( percentages[id] );				overItems++;			}						var displayPercentage:Number = bytesTotal/overItems;						// --- PROGRESS BAR --- //			this.label = [int(displayPercentage*100)]+"%";			myProgressBar.setProgress(displayPercentage, 1);						if (displayPercentage > 0.999) {				percentages = new Object();			}			if (displayPercentage > 0.999 || displayPercentage < 0.001) {				this.visible = false;			} else {				this.visible = true;			}		}	}}